{
  "consumer": {
    "name": "TodoApp"
  },
  "interactions": [
    {
      "description": "a request for projects",
      "providerStates": [
        {
          "name": "i have a list of projects"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/projects"
      },
      "response": {
        "body": [
          {
            "id": 1,
            "name": "Project 1",
            "tasks": [
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              }
            ]
          }
        ],
        "generators": {
          "body": {
            "$[*].tasks[*].id": {
              "max": 10,
              "min": 0,
              "type": "RandomInt"
            }
          }
        },
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[*].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$[*].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[*].tasks": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 1
                }
              ]
            },
            "$[*].tasks[*].done": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            },
            "$[*].tasks[*].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                }
              ]
            },
            "$[*].tasks[*].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "a request for projects in XML",
      "providerStates": [
        {
          "name": "i have a list of projects"
        }
      ],
      "request": {
        "headers": {
          "Accept": "application/xml"
        },
        "method": "GET",
        "path": "/projects"
      },
      "response": {
        "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n                    <projects>\n                    <item>\n                    <id>1</id>\n                    <tasks>\n                        <item>\n                         <id>1</id>\n                         <name>Do the laundry</name>\n                         <done>true</done>\n                        </item>\n                        <item>\n                         <id>2</id>\n                         <name>Do the dishes</name>\n                         <done>false</done>\n                        </item>\n                        <item>\n                         <id>3</id>\n                         <name>Do the backyard</name>\n                         <done>false</done>\n                        </item>\n                        <item>\n                         <id>4</id>\n                         <name>Do nothing</name>\n                         <done>false</done>\n                        </item>\n                    </tasks>\n                    </item>\n                    </projects>",
        "headers": {
          "Content-Type": "application/xml"
        },
        "status": 200
      }
    },
    {
      "description": "a request to store an image against the project",
      "providerStates": [
        {
          "name": "i have a project"
        }
      ],
      "request": {
        "body": "            {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              },\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              },\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              }\n            ]\n          }\n        ],\n        \"generators\": {\n          \"body\": {\n            \"$[*].tasks[*].id\": {\n              \"max\": 10,\n              \"min\": 0,\n              \"type\": \"RandomInt\"\n            }\n          }\n        },\n        \"headers\": {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        \"matchingRules\": {\n          \"body\": {\n            \"$\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].id\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"integer\"\n                }\n              ]\n            },\n            \"$[*].name\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].tasks\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\",\n                  \"min\": 1\n                }\n              ]\n            },\n            \"$[*].tasks[*].done\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].tasks[*].id\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                }\n              ]\n            },\n            \"$[*].tasks[*].name\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            }\n          },\n          \"header\": {}\n        },\n        \"status\": 200\n      }\n    },\n    {\n      \"description\": \"a request for projects in XML\",\n      \"providerStates\": [\n        {\n          \"name\": \"i have a list of projects\"\n        }\n      ],\n      \"request\": {\n        \"headers\": {\n          \"Accept\": \"application/xml\"\n        },\n        \"method\": \"GET\",\n        \"path\": \"/projects\"\n      },\n      \"response\": {\n        \"body\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n                    <projects>\\n                    <item>\\n                    <id>1</id>\\n                    <tasks>\\n                        <item>\\n                         <id>1</id>\\n                         <name>Do the laundry</name>\\n                         <done>true</done>\\n                        </item>\\n                        <item>\\n                         <id>2</id>\\n                         <name>Do the dishes</name>\\n                         <done>false</done>\\n                        </item>\\n                        <item>\\n                         <id>3</id>\\n                         <name>Do the backyard</name>\\n                         <done>false</done>\\n                        </item>\\n                        <item>\\n                         <id>4</id>\\n                         <name>Do nothing</name>\\n                         <done>false</done>\\n                        </item>\\n                    </tasks>\\n                    </item>\\n                    </projects>\",\n        \"headers\": {\n          \"Content-Type\": \"application/xml\"\n        },\n        \"status\": 200\n      }\n    },\n    {\n      \"description\": \"a request to store an image against the project\",\n      \"providerStates\": [\n        {\n          \"name\": \"i have a project\"\n        }\n      ],\n      \"request\": {\n        \"body",
        "headers": {
          "content-type": "application/octet-stream"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "contentType",
                  "value": "application/octet-stream"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/projects/1001/images"
      },
      "response": {
        "status": 201
      }
    }
  ],
  "metadata": {
    "pact-python": {
      "version": "2.0.1b0"
    },
    "pactRust": {
      "ffi": "0.4.8",
      "mockserver": "1.2.3",
      "models": "1.1.11"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "TodoServiceV3"
  }
}
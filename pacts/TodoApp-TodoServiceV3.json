{
  "consumer": {
    "name": "TodoApp"
  },
  "interactions": [
    {
      "description": "a request for projects",
      "providerStates": [
        {
          "name": "i have a list of projects"
        }
      ],
      "request": {
        "headers": {
          "Accept": "application/json"
        },
        "method": "GET",
        "path": "/projects"
      },
      "response": {
        "body": [
          {
            "id": 1,
            "name": "Project 1",
            "tasks": [
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              },
              {
                "done": true,
                "id": 101,
                "name": "Do the laundry"
              }
            ]
          }
        ],
        "generators": {
          "body": {
            "$[*].tasks[*].id": {
              "max": 10,
              "min": 0,
              "type": "RandomInt"
            }
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[*].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$[*].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$[*].tasks": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 1
                }
              ]
            },
            "$[*].tasks[*].done": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            },
            "$[*].tasks[*].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                },
                {
                  "match": "integer"
                }
              ]
            },
            "$[*].tasks[*].name": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            }
          },
          "header": {}
        },
        "status": 200
      }
    },
    {
      "description": "a request for projects in XML",
      "providerStates": [
        {
          "name": "i have a list of projects"
        }
      ],
      "request": {
        "headers": {
          "Accept": "application/xml"
        },
        "method": "GET",
        "path": "/projects"
      },
      "response": {
        "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n                    <projects>\n                    <item>\n                    <id>1</id>\n                    <tasks>\n                        <item>\n                         <id>1</id>\n                         <name>Do the laundry</name>\n                         <done>true</done>\n                        </item>\n                        <item>\n                         <id>2</id>\n                         <name>Do the dishes</name>\n                         <done>false</done>\n                        </item>\n                        <item>\n                         <id>3</id>\n                         <name>Do the backyard</name>\n                         <done>false</done>\n                        </item>\n                        <item>\n                         <id>4</id>\n                         <name>Do nothing</name>\n                         <done>false</done>\n                        </item>\n                    </tasks>\n                    </item>\n                    </projects>",
        "headers": {
          "Content-Type": "application/xml",
          "content-type": ", application/xml"
        },
        "status": 200
      }
    },
    {
      "description": "a request to store an image against the project",
      "providerStates": [
        {
          "name": "i have a project"
        }
      ],
      "request": {
        "body": "interactions\": [\n    {\n      \"description\": \"a request for projects\",\n      \"providerStates\": [\n        {\n          \"name\": \"i have a list of projects\"\n        }\n      ],\n      \"request\": {\n        \"headers\": {\n          \"Accept\": \"application/json\"\n        },\n        \"method\": \"GET\",\n        \"path\": \"/projects\"\n      },\n      \"response\": {\n        \"body\": [\n          {\n            \"id\": 1,\n            \"name\": \"Project 1\",\n            \"tasks\": [\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              },\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              },\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              },\n              {\n                \"done\": true,\n                \"id\": 101,\n                \"name\": \"Do the laundry\"\n              }\n            ]\n          }\n        ],\n        \"generators\": {\n          \"body\": {\n            \"$[*].tasks[*].id\": {\n              \"max\": 10,\n              \"min\": 0,\n              \"type\": \"RandomInt\"\n            }\n          }\n        },\n        \"headers\": {\n          \"Content-Type\": \"application/json\"\n        },\n        \"matchingRules\": {\n          \"body\": {\n            \"$\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].id\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"integer\"\n                }\n              ]\n            },\n            \"$[*].name\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].tasks\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\",\n                  \"min\": 1\n                }\n              ]\n            },\n            \"$[*].tasks[*].done\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            },\n            \"$[*].tasks[*].id\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                },\n                {\n                  \"match\": \"integer\"\n                }\n              ]\n            },\n            \"$[*].tasks[*].name\": {\n              \"combine\": \"AND\",\n              \"matchers\": [\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                },\n                {\n                  \"match\": \"type\"\n                }\n              ]\n            }\n          },\n          \"header\": {}\n        },\n        \"status\": 200\n      }\n    },\n    {\n      \"description\": \"a request for projects in XML\",\n      \"providerStates\": [\n        {\n          \"name\": \"i have a list of projects\"\n        }\n      ],\n      \"request\": {\n        \"headers\": {\n          \"Accept\": \"application/xml\"\n        },\n        \"method\": \"GET\",\n        \"path\": \"/projects\"\n      },\n      \"response\": {\n        \"body\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n                    <projects>\\n                    <item>\\n                    <id>1</id>\\n                    <tasks>\\n                        <item>\\n                         <id>1</id>\\n                         <name>Do the laundry</name>\\n                         <done>true</done>\\n                        </item>\\n                        <item>\\n                         <id>2</id>\\n                         <name>Do the dishes</name>\\n                         <done>false</done>\\n                        </item>\\n                        <item>\\n                         <id>3</id>\\n                         <name>Do the backyard</name>\\n                         <done>false</done>\\n                        </item>\\n                        <item>\\n                         <id>4</id>\\n                         <name>Do nothing</name>\\n                         <done>false</done>\\n                        </item>\\n                    </tasks>\\n                    </item>\\n                    </projects>\",\n        \"headers\": {\n          \"Content-Type\": \"application/xml\",\n          \"content-type\": \", application/xml\"\n        },\n        \"status\": 200\n      }\n    },\n    {\n      \"description\": \"a request to store an image against the project\",\n      \"providerStates\": [\n        {\n          \"name\": \"i have a project\"\n        }\n      ],\n      \"request\": {\n        \"body\": \"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",
        "headers": {
          "content-type": "application/octet-stream"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "contentType",
                  "value": "application/octet-stream"
                }
              ]
            }
          },
          "header": {}
        },
        "method": "POST",
        "path": "/projects/1001/images"
      },
      "response": {
        "status": 201
      }
    }
  ],
  "metadata": {
    "pact-python": {
      "version": "2.0.1b0"
    },
    "pactRust": {
      "ffi": "0.4.7",
      "mockserver": "1.2.3",
      "models": "1.1.9"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "TodoServiceV3"
  }
}
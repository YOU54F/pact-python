Standalone Pact verifier

USAGE:
    pact_verifier_cli [FLAGS] [OPTIONS] --broker-url <broker-url>... --dir <dir>... --file <file>... --provider-name <provider-name> --url <url>...

FLAGS:
        --disable-ssl-verification    Disables validation of SSL certificates
        --enable-pending              Enables Pending Pacts
        --help                        Prints help information
        --publish                     Enables publishing of verification results back to the Pact Broker. Requires the
                                      broker-url and provider-version parameters.
        --state-change-as-query       State change request data will be sent as query parameters instead of in the
                                      request body
        --state-change-teardown       State change teardown requests are to be made after each interaction
    -v, --version                     Prints version information

OPTIONS:
        --base-path <base-path>                                         Base path to add to all requests
    -b, --broker-url <broker-url>...
            URL of the pact broker to fetch pacts from to verify (requires the provider name parameter) [env:
            PACT_BROKER_BASE_URL=]
        --build-url <build-url>
            URL of the build to associate with the published verification results.

        --consumer-version-selectors <consumer-version-selectors>...
            Consumer version selectors to use when fetching pacts from the Broker. Accepts a JSON string as per
            https://docs.pact.io/pact_broker/advanced_topics/consumer_version_selectors/
        --consumer-version-tags <consumer-version-tags>
            Consumer tags to use when fetching pacts from the Broker. Accepts comma-separated values.

    -d, --dir <dir>...
            Directory of pact files to verify (can be repeated)

    -f, --file <file>...                                                Pact file to verify (can be repeated)
    -c, --filter-consumer <filter-consumer>...
            Consumer name to filter the pacts to be verified (can be repeated)

        --filter-description <filter-description>
            Only validate interactions whose descriptions match this filter [env: PACT_DESCRIPTION=]

        --filter-no-state <filter-no-state>
            Only validate interactions that have no defined provider state [env: PACT_PROVIDER_NO_STATE=]

        --filter-state <filter-state>
            Only validate interactions whose provider states match this filter [env: PACT_PROVIDER_STATE=]

    -h, --hostname <hostname>                                           Provider hostname (defaults to localhost)
        --include-wip-pacts-since <include-wip-pacts-since>
            Allow pacts that don't match given consumer selectors (or tags) to  be verified, without causing the overall
            task to fail. For more information, see https://pact.io/wip
    -l, --loglevel <loglevel>
            Log level (defaults to warn) [possible values: error, warn, info, debug, trace, none]

        --password <password>
            Password to use when fetching pacts from URLS [env: PACT_BROKER_PASSWORD=]

    -p, --port <port>
            Provider port (defaults to protocol default 80/443)

    -n, --provider-name <provider-name>                                 Provider name (defaults to provider)
        --provider-tags <provider-tags>
            Provider tags to use when publishing results. Accepts comma-separated values.

        --provider-version <provider-version>
            Provider version that is being verified. This is required when publishing results.

        --request-timeout <request-timeout>
            Sets the HTTP request timeout in milliseconds for requests to the target API and for state change requests.

        --scheme <scheme>
            Provider URI scheme (defaults to http) [default: http]  [possible values: http, https]

    -s, --state-change-url <state-change-url>                           URL to post state change requests to
    -t, --token <token>
            Bearer token to use when fetching pacts from URLS [env: PACT_BROKER_TOKEN=]

    -u, --url <url>...                                                  URL of pact file to verify (can be repeated)
        --user <user>
            Username to use when fetching pacts from URLS [env: PACT_BROKER_USERNAME=]
